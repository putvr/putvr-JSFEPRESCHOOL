class Player {
    constructor(initData, audio) {
        this.data = JSON.parse(initData);
        this.list = this.data.tracks;
        this.covers = this.data.covers;
        this.audio = new Audio();
        this.controls = audio.children[1];
        this.coverImage = document.querySelector('.player__info');
        this.progressBar = document.querySelector('.player__progress-bar');
        this.controlTrackName = document.querySelector('.player__track');
        this.mainBg = document.querySelector('.main-bg');
        this.progressBar.addEventListener('click', (e) => this.handleProgressBarClick(e));
        this.selectTrack(0);
    }
    selectTrack(trackNum) {
        this.currentTrackNumber = trackNum;
        this.trackName = this.list[trackNum];
        this.audio.src = `./assets/audio/${this.trackName}.mp3`;
        this.controlTrackName.innerHTML = `${this.trackName}`;
        this.controls.children[1].innerHTML = `${this.data.artists[trackNum]}`;
        const bgImage = `url("./assets/img/${this.covers[trackNum]}")`;
        this.coverImage.style.backgroundImage = bgImage;
        this.mainBg.style.backgroundImage = bgImage;
        this.audio.addEventListener('loadeddata', () => {
            this.progressBar.children[0].innerHTML = this.getTime(this.audio.duration);
        });
    }
    play() {
        this.controls.classList.add('playing');
        this.audio.play();
        this.updateProgressTimer = setInterval(() => {
            if (this.audio.paused) {
                return;
            }
            const progress = this.progressBar.children[1];
            progress.value = String(this.audio.currentTime / this.audio.duration * 100);
            const currentTime = this.progressBar.children[2];
            currentTime.innerHTML = this.getTime(this.audio.currentTime);
        }, 500);
    }
    pause() {
        this.audio.pause();
        this.controls.classList.remove('playing');
        if (this.updateProgressTimer) {
            clearInterval(this.updateProgressTimer);
        }
    }
    getTime(duration) {
        const toStr = (n) => (n > 9) ? `${n}` : `0${n}`;
        const min = Math.floor(duration / 60);
        const sec = Math.floor(duration - (60 * min));
        return `${min}:${toStr(sec)}`;
    }
    handlePlayClick() {
        if (this.audio.paused) {
            this.play();
        }
        else {
            this.pause();
        }
    }
    handleNextClick() {
        this.pause();
        const next = this.currentTrackNumber > this.list.length - 2 ? 0 : this.currentTrackNumber + 1;
        this.selectTrack(next);
        this.play();
    }
    handlePrevClick() {
        this.pause();
        const prev = this.currentTrackNumber === 0 ? this.list.length - 1 : this.currentTrackNumber - 1;
        this.selectTrack(prev);
        this.play();
    }
    handleProgressBarClick(event) {
        const time = this.audio.duration * event.target.value / 100;
        this.audio.currentTime = time;
        this.play();
    }
}
const dataDev = {
    artists: [
        'Amon Amarth',
    ],
    tracks: [
        '04. One Against All.mp3',
        '08. One Thousand Burning Arrows.mp3',
        '09. Vengeance Is My Name.mp3',
        '05. Raise Your Horns.mp3',
        '11. Back On Northern Shores.mp3',
        '03. On A Sea Of Blood.mp3',
        '12. Death In Fire 2016.mp3',
        '10. A Dream That Cannot Be.mp3',
        '01. First Kill.mp3',
        '13. Death In Fire [Live].mp3',
        '06. The Way Of Vikings.mp3',
        '02. Wanderer.mp3',
        '07. At Dawn‚Äôs First Light.mp3',
    ],
    covers: [
        'Back.jpg',
        'Front.jpg',
        'Back.jpg',
        'Front.jpg',
        'Back.jpg',
        'Front.jpg',
        'Back.jpg',
        'Front.jpg',
        'Back.jpg',
        'Front.jpg',
        'Back.jpg',
        'Front.jpg',
        'Back.jpg',
    ]
};
const dataProd = {
    artists: [
        'Beyonce',
        'Dua Lipa',
    ],
    tracks: [
        `Don't Hurt Yourself`,
        `Don't Start Now`,
    ],
    covers: [
        'dontstartnow.png',
        'lemonade.png',
    ]
};
const player = document.querySelector('.player');
const p = new Player(JSON.stringify(dataProd), player);
player.addEventListener('click', (event) => {
    const target = event.target;
    const action = target.dataset.player;
    if (!action) {
        return;
    }
    const actionName = `handle${action}Click`;
    p[actionName]();
});
// review
console.log(`
–û—Ü–µ–Ω–∫–∞ –∑–∞ –∑–∞–¥–∞–Ω–∏–µ 60 –±–∞–ª–ª–æ–≤

1) –í—ë—Ä—Å—Ç–∫–∞ +10
  –≤—ë—Ä—Å—Ç–∫–∞ –∞—É–¥–∏–æ–ø–ª–µ–µ—Ä–∞: –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ Play/Pause, –∫–Ω–æ–ø–∫–∏ "–í–ø–µ—Ä—ë–¥" –∏ "–ù–∞–∑–∞–¥" –¥–ª—è –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏—è –∞—É–¥–∏–æ—Ç—Ä–µ–∫–æ–≤, –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä, –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞ +5
  –≤ —Ñ—É—Ç–µ—Ä–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–∏—Ç—Ö–∞–± –∞–≤—Ç–æ—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –≥–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ª–æ–≥–æ—Ç–∏–ø –∫—É—Ä—Å–∞ —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∫—É—Ä—Å +5

2) –ö–Ω–æ–ø–∫–∞ Play/Pause +10
  –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ Play/Pause, –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ—Ç—Ä–µ–∫–∞ +5
  –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏ Play/Pause –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è –ª–∏ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞—É–¥–∏–æ—Ç—Ä–µ–∫ +5

3) –ü—Ä–∏ –∫–ª–∏–∫–∞—Ö –ø–æ –∫–Ω–æ–ø–∫–∞–º "–í–ø–µ—Ä—ë–¥" –∏ "–ù–∞–∑–∞–¥" –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º—ã–π –∞—É–¥–∏–æ—Ç—Ä–µ–∫. –ê—É–¥–∏–æ—Ç—Ä–µ–∫–∏ –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ –∫—Ä—É–≥—É - –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–¥—ë—Ç –ø–µ—Ä–≤—ã–π +10

4) –ü—Ä–∏ —Å–º–µ–Ω–µ –∞—É–¥–∏–æ—Ç—Ä–µ–∫–∞ –º–µ–Ω—è–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –æ–±–ª–æ–∂–∫–∞ –∞—É–¥–∏–æ—Ç—Ä–µ–∫–∞ +10

5) –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∞—É–¥–∏–æ—Ç—Ä–µ–∫–∞. –ü—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –ø–æ–ª–∑—É–Ω–∫–∞ –≤—Ä—É—á–Ω—É—é –º–µ–Ω—è–µ—Ç—Å—è —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –∞—É–¥–∏–æ—Ç—Ä–µ–∫–∞ +10

6) –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ—Ç—Ä–µ–∫–∞ –∏ –µ–≥–æ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è +10

7) –û—á–µ–Ω—å –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏/–∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π –≤ –∑–∞–¥–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, —É–ª—É—á—à–∞—é—â–∏–π –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è +10

  –°–∞–º—ã–π –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–π –ø—É–Ω–∫—Ç. –ß–µ—Å—Ç–Ω–æ –ø—ã—Ç–∞–ª—Å—è –ø–æ–ø–∞—Å—Ç—å –≤ –º–∞–∫–µ—Ç –∏–∑ jpg ü§∑üèº‚Äç‚ôÇÔ∏è, –Ω–æ –±–µ–∑ —Ñ–∞–Ω–∞—Ç–∏–∑–º–∞.   
`);
